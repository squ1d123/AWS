{
      "AWSTemplateFormatVersion": "2010-09-09",
      "Description": "Cassandra sandbox cluster CloudFormation template file.",

      "Parameters": {
            "ClusterName":{
                  "Default":"Cassandra Sandbox Cluster",
                  "Description":"The name of this Cassandra cluster",
                  "Type":"String"
            },
            "KeyName": {
                  "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
                  "Type": "AWS::EC2::KeyPair::KeyName",
                  "Default" : "TestKey",
                  "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
            },

            "InstanceType": {
                  "Description": "EC2 instance type",
                  "Type": "String",
                  "Default": "m3.medium",
                  "AllowedValues": ["m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge"],
                  "ConstraintDescription": "must be a valid EC2 instance type."
            },
            "CIDRToWhitelist":{
                  "Description":"Internal VPC IP CIDR for internal communication for Cassandra",
                  "Type":"String",
                  "MinLength":"9",
                  "MaxLength":"18",
                  "Default":"0.0.0.0/0",
                  "AllowedPattern":"(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
                  "ConstraintDescription":"must be a valid CIDR range of the form x.x.x.x/x."
            },
      },

      "Mappings": {
            "AWSInstanceType2Arch": {
                  "m3.medium": {
                        "Arch": "HVM64"
                  },
                  "m3.large": {
                        "Arch": "HVM64"
                  },
                  "m3.xlarge": {
                        "Arch": "HVM64"
                  },
                  "m3.2xlarge": {
                        "Arch": "HVM64"
                  },
                  "m4.large": {
                        "Arch": "HVM64"
                  },
                  "m4.xlarge": {
                        "Arch": "HVM64"
                  },
                  "m4.2xlarge": {
                        "Arch": "HVM64"
                  },
                  "m4.4xlarge": {
                        "Arch": "HVM64"
                  },
                  "m4.10xlarge": {
                        "Arch": "HVM64"
                  },
                  "c1.medium": {
                        "Arch": "PV64"
                  },
                  "c1.xlarge": {
                        "Arch": "PV64"
                  },
                  "c3.large": {
                        "Arch": "HVM64"
                  },
                  "c3.xlarge": {
                        "Arch": "HVM64"
                  },
                  "c3.2xlarge": {
                        "Arch": "HVM64"
                  },
                  "c3.4xlarge": {
                        "Arch": "HVM64"
                  },
                  "c3.8xlarge": {
                        "Arch": "HVM64"
                  },
                  "c4.large": {
                        "Arch": "HVM64"
                  },
                  "c4.xlarge": {
                        "Arch": "HVM64"
                  },
                  "c4.2xlarge": {
                        "Arch": "HVM64"
                  },
                  "c4.4xlarge": {
                        "Arch": "HVM64"
                  },
                  "c4.8xlarge": {
                        "Arch": "HVM64"
                  },
                  "g2.2xlarge": {
                        "Arch": "HVMG2"
                  },
                  "g2.8xlarge": {
                        "Arch": "HVMG2"
                  },
                  "r3.large": {
                        "Arch": "HVM64"
                  },
                  "r3.xlarge": {
                        "Arch": "HVM64"
                  },
                  "r3.2xlarge": {
                        "Arch": "HVM64"
                  },
                  "r3.4xlarge": {
                        "Arch": "HVM64"
                  },
                  "r3.8xlarge": {
                        "Arch": "HVM64"
                  },
                  "i2.xlarge": {
                        "Arch": "HVM64"
                  },
                  "i2.2xlarge": {
                        "Arch": "HVM64"
                  },
                  "i2.4xlarge": {
                        "Arch": "HVM64"
                  },
                  "i2.8xlarge": {
                        "Arch": "HVM64"
                  },
                  "d2.xlarge": {
                        "Arch": "HVM64"
                  }
            },

            "AWSRegionArch2AMI": {
                  "us-east-1": {
                        "PV64": "ami-2a69aa47",
                        "HVM64": "ami-6869aa05",
                        "HVMG2": "ami-2e5e9c43"
                  },
                  "us-west-2": {
                        "PV64": "ami-7f77b31f",
                        "HVM64": "ami-7172b611",
                        "HVMG2": "ami-83b770e3"
                  },
                  "us-west-1": {
                        "PV64": "ami-a2490dc2",
                        "HVM64": "ami-31490d51",
                        "HVMG2": "ami-fd76329d"
                  },
                  "eu-west-1": {
                        "PV64": "ami-4cdd453f",
                        "HVM64": "ami-f9dd458a",
                        "HVMG2": "ami-b9bd25ca"
                  },
                  "eu-central-1": {
                        "PV64": "ami-6527cf0a",
                        "HVM64": "ami-ea26ce85",
                        "HVMG2": "ami-7f04ec10"
                  },
                  "ap-northeast-1": {
                        "PV64": "ami-3e42b65f",
                        "HVM64": "ami-374db956",
                        "HVMG2": "ami-e0ee1981"
                  },
                  "ap-northeast-2": {
                        "PV64": "NOT_SUPPORTED",
                        "HVM64": "ami-2b408b45",
                        "HVMG2": "NOT_SUPPORTED"
                  },
                  "ap-southeast-1": {
                        "PV64": "ami-df9e4cbc",
                        "HVM64": "ami-a59b49c6",
                        "HVMG2": "ami-0cb5676f"
                  },
                  "ap-southeast-2": {
                        "PV64": "ami-63351d00",
                        "HVM64": "ami-dc361ebf",
                        "HVMG2": "ami-a71c34c4"
                  },
                  "ap-south-1": {
                        "PV64": "NOT_SUPPORTED",
                        "HVM64": "ami-ffbdd790",
                        "HVMG2": "ami-f5b2d89a"
                  },
                  "sa-east-1": {
                        "PV64": "ami-1ad34676",
                        "HVM64": "ami-6dd04501",
                        "HVMG2": "NOT_SUPPORTED"
                  },
                  "cn-north-1": {
                        "PV64": "ami-77559f1a",
                        "HVM64": "ami-8e6aa0e3",
                        "HVMG2": "NOT_SUPPORTED"
                  }
            }
      },

      "Resources": {

            "CassandraRole":{
               "Type":"AWS::IAM::Role",
               "Properties":{
                  "AssumeRolePolicyDocument":{
                     "Statement":[
                        {
                           "Effect":"Allow",
                           "Principal":{
                              "Service":[
                                 "ec2.amazonaws.com",
                                 "autoscaling.amazonaws.com"
                              ]
                           },
                           "Action":[
                              "sts:AssumeRole"
                           ]
                        }
                     ]
                  },
                  "Path":"/",
                  "Policies":[
                     {
                        "PolicyName":"CassandraPolicy",
                        "PolicyDocument":{
                           "Statement":[
                              {
                                 "Effect":"Allow",
                                 "Action":[
                                    "s3:*",
                                    "ec2:Describe*",
                                    "ec2:AttachNetworkInterface",
                                    "ec2:AttachVolume",
                                    "ec2:CreateTags",
                                    "ec2:CreateVolume",
                                    "ec2:RunInstances",
                                    "ec2:StartInstances",
                                    "ec2:DeleteVolume",
                                    "ec2:CreateSecurityGroup",
                                    "ec2:CreateSnapshot",
                                    "autoscaling:*"
                                 ],
                                 "Resource":"*"
                              },
                              {
                                 "Effect":"Allow",
                                 "Action":[
                                    "dynamodb:*",
                                    "dynamodb:Scan",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:UpdateTable"
                                 ],
                                 "Resource":[
                                    "*"
                                 ]
                              }
                           ]
                        }
                     }
                  ]
               }
            },
            "CassandraProfile":{
               "Type":"AWS::IAM::InstanceProfile",
               "Properties":{
                  "Roles":[
                     {
                        "Ref":"CassandraRole"
                     }
                  ]
               }
            },

            "CassandraSecurityGroup": {
                  "Type": "AWS::EC2::SecurityGroup",
                  "Properties": {
                        "GroupDescription": "Cassandra ports + SSH access",
                        "SecurityGroupIngress":[
                              {
                                 "IpProtocol":"tcp",
                                 "FromPort":"7000",
                                 "ToPort":"7001",
                                 "CidrIp":{
                                    "Ref":"CIDRToWhitelist"
                                 }
                              },
                              {
                                 "IpProtocol":"tcp",
                                 "FromPort":"7199",
                                 "ToPort":"7199",
                                 "CidrIp":{
                                    "Ref":"CIDRToWhitelist"
                                 }
                              },
                              {
                                 "IpProtocol":"tcp",
                                 "FromPort":"9042",
                                 "ToPort":"9042",
                                 "CidrIp":{
                                    "Ref":"CIDRToWhitelist"
                                 }
                              },
                              {
                                 "IpProtocol":"tcp",
                                 "FromPort":"9160",
                                 "ToPort":"9160",
                                 "CidrIp":{
                                    "Ref":"CIDRToWhitelist"
                                 }
                              },
                              {
                                 "IpProtocol":"tcp",
                                 "FromPort":"22",
                                 "ToPort":"22",
                                 "CidrIp":{
                                    "Ref":"CIDRToWhitelist"
                                 }
                              }
                        ]
                  }
                  
            },

            "CassandraNode" : {
                  "Type": "AWS::EC2::Instance",
                  "Metadata":{
                        "AWS::CloudFormation::Init" : {
                              "configSets":{
                                    "install_cassandra" : ["install_java8", "install_cassandra_ddc"]
                              },
                              "install_java8":{
                                    "packages":{
                                          "yum":{
                                                "java-1.8.0-openjdk-devel":[]
                                          }
                                    },
                                    "commands":{
                                          "use_java8":{
                                                "command":"alternatives --set java /usr/lib/jvm/jre-1.8.0-openjdk.x86_64/bin/java"
                                          }
                                    },
                                    "files" : {
                                          "/etc/cfn/cfn-hup.conf" : {
                                                "content" : { "Fn::Join" : ["", [
                                                      "[main]\n",
                                                      "stack=", { "Ref" : "AWS::StackId" }, "\n",
                                                      "region=", { "Ref" : "AWS::Region" }, "\n"
                                                ]]},
                                                "mode"    : "000400",
                                                "owner"   : "root",
                                                "group"   : "root"
                                          },

                                          "/etc/cfn/hooks.d/cfn-auto-reloader.conf" : {
                                              "content": { "Fn::Join" : ["", [
                                                "[cfn-auto-reloader-hook]\n",
                                                "triggers=post.update\n",
                                                "path=Resources.CassandraNode.Metadata.AWS::CloudFormation::Init\n",
                                                "action=/opt/aws/bin/cfn-init -v ",
                                                "         --stack ", { "Ref" : "AWS::StackName" },
                                                "         --resource CassandraNode ",
                                                "         --configsets install_cassandra ",
                                                "         --region ", { "Ref" : "AWS::Region" }, "\n",
                                                "runas=root\n"
                                              ]]}
                                            },

                                            "/etc/yum.repos.d/datastax.repo" : {
                                              "content": { "Fn::Join" : ["", [
                                                "[datastax-ddc]\n",
                                                "name = DataStax Repo for Apache Cassandra\n",
                                                "baseurl = http://rpm.datastax.com/datastax-ddc/3.2\n",
                                                "enabled = 1\n",
                                                "gpgcheck = 0\n"
                                              ]]}
                                            }
                                    },
                                    "services" : {
                                          "sysvinit" : {
                                                "cfn-hup" : { "enabled" : "true", "ensureRunning" : "true",
                                                      "files" : ["/etc/cfn/cfn-hup.conf", "/etc/cfn/hooks.d/cfn-auto-reloader.conf"]}
                                          }
                                    }
                              },
                              "install_cassandra_ddc" : {
                                    "packages" : {
                                          "yum" : {
                                                "datastax-ddc":[],
                                                "git-all" : []
                                          }
                                    },
                                    "commands" : {
                                          "set_listen_address":{
                                                "command":"sed -i -e \"s/listen_address:.*/listen_address: \\\"$(curl -s curl http://169.254.169.254/latest/meta-data/local-ipv4)\\\"/\" /etc/cassandra/default.conf/cassandra.yaml "
                                          },
                                          "set_rpc_address":{
                                                "command":"sed -i -e \"s/^rpc_address:.*/rpc_address: 0.0.0.0/\" /etc/cassandra/default.conf/cassandra.yaml "
                                          },
                                          "set_broadcast_rpc_address":{
                                                "command":"sed -i -e \"s/# broadcast_rpc_address:.*/broadcast_rpc_address: 1.2.3.4/\" /etc/cassandra/default.conf/cassandra.yaml "
                                          },
                                          "set_seed_address":{
                                                "command":"sed -i -e \"s/seeds:.*/seeds: \\\"$(cat /tmp/privateipcurrent.data)\\\"/\" /etc/cassandra/default.conf/cassandra.yaml "
                                          },
                                          "set_cluster_name":{
                                                "command":"sed -i -e \"s/cluster_name:.*/cluster_name: \\\"$(cat /tmp/clustername.data)\\\"/\" /etc/cassandra/default.conf/cassandra.yaml "
                                          }
                                    },
                                    "services" : {
                                          "sysvinit" : {
                                                "cassandra" : {"enabled" : "true", "ensureRunning" : "true"}
                                          }
                                    }
                              }
                        }
                  },
                  "Properties": {
                        "DisableApiTermination": false,
                        "IamInstanceProfile":{
                              "Ref":"CassandraProfile"
                        },
                        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
                          { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
                        "InstanceType": { "Ref" : "InstanceType" },
                        "SecurityGroups" : [{"Ref" : "CassandraSecurityGroup"}],
                        "KeyName": { "Ref" : "KeyName" },
                        "Tags" : [
                              {"Key" : "Name", "Value" : { "Ref" : "ClusterName" }}
                        ],
                        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
                              "#!/bin/bash -v\n",
                              "yum install -y aws-cfn-bootstrap\n",

                              "aws ec2 describe-instances --instance-ids $(curl -s curl http://169.254.169.254/latest/meta-data/instance-id/) --region ",
                              {
                                 "Ref":"AWS::Region"
                              },
                              "|grep \"PrivateIpAddress\"|head -1|cut -d':' -f2|cut -d'\"' -f2 > /tmp/privateipcurrent.data \n",

                              "echo \"",
                              {
                                 "Ref":"ClusterName"
                              },
                              "\" > /tmp/clustername.data \n",

                              "# Install the files and packages from the metadata\n",
                              "/opt/aws/bin/cfn-init -v ",
                              "         --stack ", { "Ref" : "AWS::StackName" },
                              "         --resource CassandraNode ",
                              "         --configsets install_cassandra ",
                              "         --region ", { "Ref" : "AWS::Region" }, "\n",      
                              "# All is well so signal success\n",
                        "  /opt/aws/bin/cfn-signal -e 0 --reason=\"SeedServer setup complete\"",
                              "         --stack ", { "Ref" : "AWS::StackName" },
                              "         --resource CassandraNode ",
                              "         --region ", { "Ref" : "AWS::Region" }, "\n"
                        ]]}}
                  }
            }
      },
      "Outputs" : {
            "PublicIp" : {
                  "Description" : "Public IP address to use for connection to the newly created Cassandra snadbox",
                  "Value" : { "Fn::GetAtt" : ["CassandraNode", "PublicIp"]}
           },
           "PublicDNS" : {
                  "Description" : "Public DNS name to use for connection to the newly created Cassandra snadbox",
                  "Value" : { "Fn::GetAtt" : ["CassandraNode", "PublicDnsName"]}
           }
      }
}
 